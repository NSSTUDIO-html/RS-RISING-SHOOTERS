const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const planeMaterial = new THREE.MeshStandardMaterial({ color: 0x808080 });
   const textureLoader53 = new THREE.TextureLoader();
    const metalnessMap2 = textureLoader53.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTdN_0FmrQiJUD33tP1M5HBiiSeGCdHT5yApWgtr8idiDTPWaWXLy6TN_CV&s=10');
const roughnessMap2 = textureLoader53.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTdN_0FmrQiJUD33tP1M5HBiiSeGCdHT5yApWgtr8idiDTPWaWXLy6TN_CV&s=10');
  const texture33 = textureLoader53.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2ZoxrS4GI9Wib3BYcUs-aO9RgthnGdSW1D2inUGMhk5Hn0sRbECeIsLFm&s=10');
  export const rr = new THREE.Group();
    // First torus
  const geometry1 = new THREE.TorusGeometry(2, 0.5, 8, 20);
  const geometry33 = new THREE.TorusGeometry(2, 0.7, 5, 20);
  
  const textureLoader3 = new THREE.TextureLoader();
  const texture = textureLoader3.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTWOdVUsyCJjgNQDtUHNrQ-UCwOFJ_2ameO7lLxDY5SbvK7UPvG7KIiBB4&s=10');
  const material1 = new THREE.MeshStandardMaterial({ map:texture,metalnessMap:metalnessMap2,emissive:0x000000});
   export const torus111 = new THREE.Mesh(geometry1, material1);
    torus111.position.set(-5, 0, -3);
  torus111.scale.set(0.6,0.6,1.4);
    torus111.castShadow = true;
    rr.add(torus111);
  const cylinderGeometry11 = new THREE.CylinderGeometry(0.5, 0.5, 2, 32);
  const texture111 = textureLoader3.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSDHDJjzXbjTNra_I0eIrnXN6SipvmtZ-U7GA&usqp=CAU');
  const material111 = new THREE.MeshStandardMaterial({ map:texture111,metalnessMap:metalnessMap2,emissive:0x000000});
   
  const t1 = new THREE.Mesh(cylinderGeometry11, material111);
    t1.position.set(-5, 0, -3);
  t1.scale.set(2,0.6,2);
  t1.rotation.set(Math.PI/2,Math.PI,Math.PI);
    t1.castShadow = true;
    rr.add(t1);
  const t2 = new THREE.Mesh(cylinderGeometry11, material111);
    t2.position.set(5, 0, -3);
  t2.scale.set(2,0.6,2);
  t2.rotation.set(Math.PI/2,Math.PI,Math.PI);
    t2.castShadow = true;
    rr.add(t2);
  const t3 = new THREE.Mesh(cylinderGeometry11, material111);
    t3.position.set(-5, 0, 3);
  t3.scale.set(2,0.6,2);
  t3.rotation.set(Math.PI/2,Math.PI,Math.PI);
    t3.castShadow = true;
    rr.add(t3);
  const t4 = new THREE.Mesh(cylinderGeometry11, material111);
    t4.position.set(5, 0, 3);
  t4.scale.set(2,0.6,2);
  t4.rotation.set(Math.PI/2,Math.PI,Math.PI);
    t4.castShadow = true;
    rr.add(t4);
  const texture334 = textureLoader53.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTHhu-Qy0ISXTgUAYS2Lx_EOgNZjwUk859MKSQts1xBicQlV-JsaTTTIUU&s=10');
  const material112 = new THREE.MeshStandardMaterial( { map:texture334,  metalnessMap:metalnessMap2,roughnessMap:roughnessMap2} );

 export const torus333 = new THREE.Mesh(geometry1, material1);
    torus333.position.set(5, 0, -3);
  torus333.scale.set(0.6,0.6,1.4);
    torus333.castShadow = true;
    rr.add(torus333);
  

    // Second torus
  const geometry2 = new THREE.TorusGeometry(2, 0.5,60, 20);
  const material2 = new THREE.MeshStandardMaterial({ map:texture});
   export const torus222 = new THREE.Mesh(geometry2, material2);
    torus222.position.set(-5, 0, 3);
  torus222.scale.set(0.6,0.6,1.4);
    torus222.castShadow = true;
    rr.add(torus222);
  export const torus555 = new THREE.Mesh(geometry2, material2);
    torus555.position.set(5, 0, 3);
  torus555.scale.set(0.6,0.6,1.4);
  torus555.rotation.set(Math.PI,Math.PI,Math.PI/2);
    torus555.castShadow = true;
    rr.add(torus555);

const seatGeometry = new THREE.BoxGeometry(2.5, 1, 1);
  const texture123 = textureLoader3.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTR5zHtTz4Js2fBww03sKZNwflM5PG-Jq9Psx_sOJ3nf1WI4hUWJQS_Foc&s=10');
   const texture12 = textureLoader3.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRKLCtE4LvxFHn9GtgjXAtfWWFcH13NsTJLC9Bq0qjl0_mclYwqhSWj9J5V&s=10');
   const seatMaterial = new THREE.MeshStandardMaterial({ map:texture123,metalnessMap:texture123,roughnessMap:texture123});
   const seatMaterial1 = new THREE.MeshStandardMaterial({ color:0x000000,metalnessMap:metalnessMap2,roughnessMap:roughnessMap2});
   const seatMaterial2 = new THREE.MeshStandardMaterial({ map:texture12,metalnessMap:texture123,roughnessMap:texture123});
   
  const carbase = new THREE.Mesh(seatGeometry, seatMaterial);
    carbase.position.set(0, 1, 0);
  carbase.scale.set(1,13,6.6);
  carbase.rotation.set(0,0,Math.PI/2);
    carbase.castShadow = true;
    rr.add(carbase);
  
  const carbase1 = new THREE.Mesh(seatGeometry, seatMaterial);
    carbase1.position.set(2, 3, 0);
  carbase1.scale.set(1,4,6);
  carbase1.rotation.set(0,0,Math.PI/2);
    carbase1.castShadow = true;
    rr.add(carbase1);
  const c1 = new THREE.Mesh(seatGeometry, seatMaterial1);
    c1.position.set(2, 3, 0);
  c1.scale.set(0.8,4,6.2);
  c1.rotation.set(0,0,Math.PI/2);
    c1.castShadow = true;
    rr.add(c1);
  const carbase2 = new THREE.Mesh(seatGeometry, seatMaterial1);
    carbase2.position.set(-1, 2.2, 0);
  carbase2.scale.set(0.6,4.4,5.9);
  carbase2.rotation.set(0,0,-Math.PI/4);
    carbase2.castShadow = true;
    rr.add(carbase2);
  const carbase3 = new THREE.Mesh(seatGeometry, seatMaterial1);
    carbase3.position.set(4.5,2, 0);
  carbase3.scale.set(0.6,4.4,5.9);
  carbase3.rotation.set(0,0,Math.PI/6);
    carbase3.castShadow = true;
    rr.add(carbase3);
  //car front face
  const c3 = new THREE.Mesh(seatGeometry, seatMaterial2);
    c3.position.set(-6.5,1, 0);
  c3.scale.set(0.3,3,3.5);
  c3.rotation.set(0,0,Math.PI);
    c3.castShadow = true;
    rr.add(c3);
  const hc3 = new THREE.Mesh(seatGeometry, seatMaterial2);
    hc3.position.set(-6.5,1.5, 2.5);
  hc3.scale.set(0.2,0.8,1.2);
  hc3.rotation.set(0,0,Math.PI);
    hc3.castShadow = true;
    rr.add(hc3);
  const hc4 = new THREE.Mesh(seatGeometry, seatMaterial2);
    hc4.position.set(-6.5,1.5, -2.5);
  hc4.scale.set(0.2,0.8,1.2);
  hc4.rotation.set(0,0,Math.PI);
    hc4.castShadow = true;
    rr.add(hc4);
  const c4 = new THREE.Mesh(seatGeometry, seatMaterial);
    c4.position.set(-4,1, 0);
  c4.scale.set(1.7,3,3);
  c4.rotation.set(0,0,Math.PI);
    c4.castShadow = true;
    rr.add(c4);
  const c5 = new THREE.Mesh(seatGeometry, seatMaterial);
    c5.position.set(-3,1, 1);
  c5.scale.set(2,2.9,2.5);
  c5.rotation.set(Math.PI,Math.PI/9,Math.PI);
    c5.castShadow = true;
    rr.add(c5);
  const c6 = new THREE.Mesh(seatGeometry, seatMaterial);
    c6.position.set(-3,1, -1);
  c6.scale.set(2,2.9,2.5);
  c6.rotation.set(Math.PI,-Math.PI/9,Math.PI);
    c6.castShadow = true;
    rr.add(c6);
const cylinderGeometry = new THREE.CylinderGeometry(0.5, 0.5, 2, 32);
  const textureLoader = new THREE.TextureLoader();
    const texture11 = textureLoader.load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2ZoxrS4GI9Wib3BYcUs-aO9RgthnGdSW1D2inUGMhk5Hn0sRbECeIsLFm&s=10');
  const cylinderMaterial = new THREE.MeshStandardMaterial({ map: texture11 });
    
  const c7 = new THREE.Mesh(cylinderGeometry, seatMaterial);
  c7.position.set(0,1.5,3);
  c7.scale.set(2,6.6,1);
  c7.rotation.set(Math.PI,Math.PI,Math.PI/2);
  c7.castShadow = true;
  rr.add(c7);
  const c71 = new THREE.Mesh(cylinderGeometry, seatMaterial);
  c71.position.set(-6.2,1,0);
  c71.scale.set(3,3.2,1);
  c71.rotation.set(Math.PI,Math.PI/2,Math.PI/2);
  c71.castShadow = true;
  rr.add(c71);
  const c8 = new THREE.Mesh(cylinderGeometry, seatMaterial);
  c8.position.set(0,1.5,-3);
  c8.scale.set(2,6.6,1);
  c8.rotation.set(Math.PI,Math.PI,Math.PI/2);
  c8.castShadow = true;
  rr.add(c8);
  const c9 = new THREE.Mesh(cylinderGeometry, seatMaterial);
  c9.position.set(6.5,1,0);
  c9.scale.set(1,3.2,3);
  c9.rotation.set(Math.PI/2,Math.PI,Math.PI);
  c9.castShadow = true;
  rr.add(c9);
const ambientLight = new THREE.AmbientLight(0x404040, 2);
    rr.add(ambientLight);
  rr.position.y += -0.5;
  scene.add(rr);
export default rr ;

